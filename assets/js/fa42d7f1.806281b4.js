"use strict";(self.webpackChunkopenapi_wfeng=self.webpackChunkopenapi_wfeng||[]).push([[637],{8215:function(e,n,t){var r=t(7294);n.Z=function(e){var n=e.children,t=e.hidden,a=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:a},n)}},6396:function(e,n,t){t.d(n,{Z:function(){return m}});var r=t(7462),a=t(7294),s=t(2389),o=t(9443);var i=function(){var e=(0,a.useContext)(o.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},u=t(9521),l=t(6010),p="tabItem_vU9c";function c(e){var n,t,r,s=e.lazy,o=e.block,c=e.defaultValue,m=e.values,d=e.groupId,h=e.className,g=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=m?m:g.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,u.lx)(f,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var y=null===c?c:null!=(n=null!=c?c:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=g[0])?void 0:r.props.value;if(null!==y&&!f.some((function(e){return e.value===y})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+y+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var b=i(),w=b.tabGroupChoices,k=b.setTabGroupChoices,x=(0,a.useState)(y),N=x[0],T=x[1],S=[],E=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=d){var I=w[d];null!=I&&I!==N&&f.some((function(e){return e.value===I}))&&T(I)}var O=function(e){var n=e.currentTarget,t=S.indexOf(n),r=f[t].value;r!==N&&(E(n),T(r),null!=d&&k(d,r))},P=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=S.indexOf(e.currentTarget)+1;t=S[r]||S[0];break;case"ArrowLeft":var a=S.indexOf(e.currentTarget)-1;t=S[a]||S[S.length-1]}null==(n=t)||n.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":o},h)},f.map((function(e){var n=e.value,t=e.label;return a.createElement("li",{role:"tab",tabIndex:N===n?0:-1,"aria-selected":N===n,className:(0,l.Z)("tabs__item",p,{"tabs__item--active":N===n}),key:n,ref:function(e){return S.push(e)},onKeyDown:P,onFocus:O,onClick:O},null!=t?t:n)}))),s?(0,a.cloneElement)(g.filter((function(e){return e.props.value===N}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==N})}))))}function m(e){var n=(0,s.Z)();return a.createElement(c,(0,r.Z)({key:String(n)},e))}},482:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return m},default:function(){return h}});var r=t(7462),a=t(3366),s=(t(7294),t(3905)),o=t(6396),i=t(8215),u=["components"],l={sidebar_position:6},p="Paths exercise",c={unversionedId:"paths-exercise",id:"paths-exercise",isDocsHomePage:!1,title:"Paths exercise",description:"To practise your new knowledge, your task is to create two API endpoints.",source:"@site/course/paths-exercise.md",sourceDirName:".",slug:"/paths-exercise",permalink:"/openapi-course/course/paths-exercise",editUrl:"https://github.com/xeeija/openapi-course/edit/main/course/paths-exercise.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Security",permalink:"/openapi-course/course/security"},next:{title:"Conclusion",permalink:"/openapi-course/course/conclusion"}},m=[],d={toc:m};function h(e){var n=e.components,t=(0,a.Z)(e,u);return(0,s.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"paths-exercise"},"Paths exercise"),(0,s.kt)("p",null,"To practise your new knowledge, your task is to create two API endpoints."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"A POST endpoint to create a user."),(0,s.kt)("br",{parentName:"p"}),"\n","The response should support JSON and XML format.\nIn the request body a user in JSON format is expected.\nOtherwise, a status 400 response should be sent.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},(0,s.kt)("strong",{parentName:"p"},"A GET endpoint to get a user by its username."),(0,s.kt)("br",{parentName:"p"}),"\n","The username should be part of the URI.\nOn success, the user object in JSON or XML format should be sent as response.\nOtherwise, the response has status code 404.")),(0,s.kt)("li",{parentName:"ul"},(0,s.kt)("p",{parentName:"li"},"Optionally, add security to the API, so that only authenticted clients can create users.\nYou can use the predefined security scheme here."))),(0,s.kt)("p",null,"You can use the predefined User schema for this exercise. Insert it in the ",(0,s.kt)("inlineCode",{parentName:"p"},"schema")," like this:"),(0,s.kt)(o.Z,{groupId:"openapi-language",mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'$ref: "#/components/schemas/User"\n'))),(0,s.kt)(i.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'"$ref": "#/components/schemas/User"\n')))),(0,s.kt)("p",null,"Copy the code below into the ",(0,s.kt)("a",{parentName:"p",href:"https://editor.swagger.io/"},"Online Swagger Editor")," or your editor of choice and add your endpoints."),(0,s.kt)(o.Z,{groupId:"openapi-language",mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"yaml",label:"YAML",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-yaml"},'openapi: 3.0.1\ninfo:\n  title: OpenAPI Paths Exercise\n  description:\n    "This exercise uses the Swagger Petstore example as foundation.<br><br>\n    This is a sample server Petstore server.\n    You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\n    For this sample, you can use the api key `special-key` to test the authorization filters."\n  termsOfService: http://swagger.io/terms/\n  contact:\n    email: apiteam@swagger.io\n  license:\n    name: Apache 2.0\n    url: http://www.apache.org/licenses/LICENSE-2.0.html\n  version: 1.0.0\nexternalDocs:\n  description: Find out more about Swagger\n  url: http://swagger.io\nservers:\n  - url: https://petstore.swagger.io/v2\n  - url: http://petstore.swagger.io/v2\ntags:\n  - name: user\n    description: Operations about users\n    externalDocs:\n      description: Find out more about our store\n      url: http://swagger.io\npaths:\n  # Your code here\n  \n  # End your code\ncomponents:\n  schemas:\n    User:\n      type: object\n      properties:\n        id:\n          type: integer\n          format: int64\n        username:\n          type: string\n        firstName:\n          type: string\n        email:\n          type: string\n        password:\n          type: string\n        userStatus:\n          type: integer\n      xml:\n        name: User\n  securitySchemes:\n    api_key:\n      type: apiKey\n      name: api_key\n      in: header\n'))),(0,s.kt)(i.Z,{value:"json",label:"JSON",mdxType:"TabItem"},(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "openapi": "3.0.1",\n  "info": {\n    "title": "OpenAPI Paths Exercise",\n    "description": "This exercise uses the Swagger Petstore example as foundation.<br><br> This is a sample server Petstore server. You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.",\n    "termsOfService": "http://swagger.io/terms/",\n    "contact": {\n      "email": "apiteam@swagger.io"\n    },\n    "license": {\n      "name": "Apache 2.0",\n      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"\n    },\n    "version": "1.0.0"\n  },\n  "externalDocs": {\n    "description": "Find out more about Swagger",\n    "url": "http://swagger.io"\n  },\n  "servers": [\n    {\n      "url": "https://petstore.swagger.io/v2"\n    },\n    {\n      "url": "http://petstore.swagger.io/v2"\n    }\n  ],\n  "tags": [\n    {\n      "name": "user",\n      "description": "Operations about users",\n      "externalDocs": {\n        "description": "Find out more about our store",\n        "url": "http://swagger.io"\n      }\n    }\n  ],\n  "paths": {\n    // Your code here\n\n    // End your code\n  },\n  "components": {\n    "schemas": {\n      "User": {\n        "type": "object",\n        "properties": {\n          "id": {\n            "type": "integer",\n            "format": "int64"\n          },\n          "username": {\n            "type": "string"\n          },\n          "firstName": {\n            "type": "string"\n          },\n          "email": {\n            "type": "string"\n          },\n          "password": {\n            "type": "string"\n          },\n          "userStatus": {\n            "type": "integer"\n          }\n        },\n        "xml": {\n          "name": "User"\n        }\n      }\n    },\n    "securitySchemes": {\n      "api_key": {\n        "type": "apiKey",\n        "name": "api_key",\n        "in": "header"\n      }\n    }\n  }\n}\n')))))}h.isMDXComponent=!0}}]);